program maesumamatrices;

#.*Variables globales#.*
int iM1;
int jM1;
int iM2;
int jM2;
int auxVal;
int FLAG = 1;

#.*Este metodo captura las dimensiones de las matrices#.*

method ReadDimensions()
{
    #.*Dimension i matriz 1#.*
    read(iM1);

    #.*Dimension j matriz 1#.*
    read(jM1);

    #.*Dimension i matriz 2#.*
    read(iM2);

    #.*Dimension j matriz 2#.*
    read(jM2);
}


#.*Este metodo llena la matriz#.*

method GetValMatrix1()
{
    for(i = 0; i < iM1; i++){
        for(j = 0; i < jM1; j++){
			#.*valor en [i][j] #.*

            read(auxVal);

            
			matrix1[i][j] = auxVal;
		}
	}	
}


#.*Este metodo llena la matriz #2  #.*
method GetValMatrix2()
{
    for(i = 0; i < iM2; i++){
        for(j = 0; i < jM2; j++){
			#.*valor en [i][j] #.*

            read(auxVal);

			matrix2[i][j] = auxVal;	    	
		}
	}	
}


#.*Este metodo genera e imprime la suma de las dos matrices#.*

method AddMatrixes()
{
	for(i = 0; i < iM1; i++){
        for(j = 0; i < jM1; j++){
			
			auxVal = matrix1[i][j] plus matrix2[i][j];
            write(auxVal);
		}
	}	
}


main
{

#.*FLAG = 1 es True, FLAG = 0 es False#.*
#.*Hasta que las dimensiones sean iguales, y se lleve a cabo la suma, el programa termina#.*

while (FLAG > 0)
	{
        call ReadDimensions();	
	
        int matrix1 [iM1] [jM1];
        int matrix2 [iM2] [jM2];

		if (iM1 == iM2  & jM1 == jM2)
		{
		    call GetValMatrix1();
		    call GetValMatrix2();
		    call AddMatrixes();
		    FLAG = 0;
		}
	}
}
