int i;
int j;
int min_idx;

int auxSwap1;
int auxSwap2;

int num;
int numElem;
int auxNumElem;

int arr[10];

int min_idx;
int aux;
int aux1;
int temp;

int auxArr1;
int auxArr2;

int true;

method enterDigits()
{
	
	for(i=0; i<numElem; i++)
	{
		write(""__Val__"");
		read(num);
		arr[i] = num;
	}
}

method sort()
{
	auxNumElem = numElem - 1;
	for(i=0; i < auxNumElem; i++)
	{	
		aux1 = auxNumElem;
		for(j=0; j < aux1; j++)
		{
			aux = i plus 1;
			if(arr[j] > arr[aux])
			{
				temp = arr[j];
				arr[j] = arr[aux];
				arr[aux] = temp;
			}
			
		}
		

	}
}


method printList()
{
	numElem = numElem - 1;
	for(i=numElem; i > 0 ; i--)
	{
		aux1 = arr[i];		
		write(aux1);
	}
		aux1 = arr[0];		
		write(aux1);
}


main
{
	true = 1;
	while(true == 1)
	{
		write(""__Number_Of_Elements_Max_10__"");
		read(numElem);

		call enterDigits();
		call sort();

		write(""__Sorted_List_In_Ascending_Order__"");
		call printList();

		write(""__Another_Vector_1_Yes_0_No__"");
		read(true);
	}
	write(""__Good_Bye__"");
}


