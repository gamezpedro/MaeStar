int i;
int j;
int k;

int matA[5][5];
int matB[5][5];
int matC[5][5];

int dimRB;
int dimCB;
int dimRA;
int dimCA;

int boolSum;
int boolMul;

int auxSum;
int num;

int auxMatA;
int auxMatB;
int auxMatC;

int option;
int true;


method fillMatrixA()
{
	write(""__Fill_Matrixes__"");
	write(""__MatrixA__"");
	for(i=0; i<dimRA; i++)
	{
		write(""__Row__"");
		for(j=0; j<dimCA; j++)
		{
			write(""__val__"");
			read(num);
			matA[i][j] = num;
		}
	}
}


method fillMatrixB()
{
	write(""__MatrixB__"");
	for(i=0; i<dimRB; i++)
	{
		write(""__Row__"");
		for(j=0; j<dimCB; j++)
		{
			write(""__val__"");
			read(num);
			matB[i][j] = num;
		}
	}
}


method checkDimMat()
{
	if(dimCA == dimRB)
	{
		boolMul = 1;
	}
	else
	{
		boolMul = 0;
		write(""__IncorrectDim__"");
	}
}


method checkDimSum()
{
	if( (dimRA == dimRB) and (dimCA == dimCB))
	{
		boolSum = 1;
	}
	else
	{
		boolSum = 0;
		write(""__IncorrectDim__"");
	}
}


method matMultiplication()
{
	for(i=0; i<dimRA; i++)
	{
		for(j=0; j<dimCB; j++)
		{
			auxSum = 0;
			for(k=0; k<dimCA; k++)
			{
				auxSum = auxSum plus (matA[i][k] * matB[k][j]);
			}	
			matC[i][j] = auxSum;
		}
	}
}



method matSum()
{
	for(i=0; i<dimRA; i++)
	{
		for(j=0; j<dimCA; j++)
		{
			auxSum = 0;
			auxSum = matA[i][j] plus matB[i][j];
			matC[i][j] = auxSum;
		}
	}
}


method printMatrixMul()
{
	write(""__Result__"");
	for(i=0; i<dimRA; i++)
	{
		for(j=0; j<dimCB; j++)
		{
			auxMatC = matC[i][j];
			write(auxMatC);
		}
		write(""_______"");
	}
}


method printMatrixSum()
{
	write(""__Result__"");
	for(i=0; i<dimRA; i++)
	{
		for(j=0; j<dimCA; j++)
		{
			auxMatC = matC[i][j];
			write(auxMatC);
		}
		write(""_______"");
	}
}


method declareMatrix()
{
	write(""__ROWS_MAT_A__"");
	read(dimRA);
	write(""__COLUMNS_MAT_A__"");
	read(dimCA);

	write(""__ROWS_MAT_B__"");
	read(dimRB);
	write(""__COLUMNS_MAT_B__"");
	read(dimCB);
}


main
{
	write(""__PROGRAM__"");
	call declareMatrix();

	true = 1;
	while(true == 1)
	{
		
		write(""__Multiplicacion_1__"");
		write(""__Suma_2__"");
		write(""__Declare_Matrix_Again_3__"");
		write(""__Quit_4__"");
		

		read(option);
		if (option == 1)
		{
			call checkDimMat();
			if(boolMul == 1)
			{
				call fillMatrixA();
				call fillMatrixB();
				call matMultiplication();
				call printMatrixMul();
			}
			
		}	
		if (option == 2)
		{
			call checkDimSum();
			if(boolSum == 1)
			{
				call fillMatrixA();
				call fillMatrixB();
				call matSum();
				call printMatrixSum();
			}
		}	
		if (option == 3)
		{
			call declareMatrix();
		}
		if (option == 4)
		{
			write(""__GoodBye__"");
			true = 0;
		}	
	}

}
